{"version":3,"sources":["InputArea.js","Trips.js","App.js","index.js"],"names":["InputArea","_Component","_getPrototypeOf2","_this","Object","classCallCheck","this","_len","arguments","length","args","Array","_key","possibleConstructorReturn","getPrototypeOf","call","apply","concat","state","expanded","handleChange","text","toggleExpanded","props","onChange","setState","inherits","createClass","key","value","_this2","react_default","a","createElement","className","TextField_default","label","multiline","rowsMax","fullWidth","e","target","margin","onClick","Component","TravelTypes","Arrival","Departure","dayDifference","date1","date2","diff","Math","floor","abs","Trip","_ref","first","trip","nextTrip","duration","travelType","parsedDate","Date","TableRow_default","TableCell_default","date","portOfEntry","TripsTable","_ref2","trips","Paper_default","Table_default","TableHead_default","TableBody_default","map","index","textToTrips","currentDate","currentTravelType","split","forEach","line","type","match","push","Instructions","href","Disclaimer","App","handleProcess","InputArea_InputArea","GithubCorner_default","bannerColor","ReactDOM","render","src_App_0","document","getElementById"],"mappings":"8OAGaA,EAAb,SAAAC,GAAA,SAAAD,IAAA,IAAAE,EAAAC,EAAAC,OAAAC,EAAA,EAAAD,CAAAE,KAAAN,GAAA,QAAAO,EAAAC,UAAAC,OAAAC,EAAA,IAAAC,MAAAJ,GAAAK,EAAA,EAAAA,EAAAL,EAAAK,IAAAF,EAAAE,GAAAJ,UAAAI,GAAA,OAAAT,EAAAC,OAAAS,EAAA,EAAAT,CAAAE,MAAAJ,EAAAE,OAAAU,EAAA,EAAAV,CAAAJ,IAAAe,KAAAC,MAAAd,EAAA,CAAAI,MAAAW,OAAAP,MAEEQ,MAAQ,CACNC,UAAU,GAHdhB,EAMEiB,aAAe,SAACC,GACdlB,EAAKmB,gBAAe,GACpBnB,EAAKoB,MAAMC,SAASH,IARxBlB,EAWEmB,eAAiB,SAACH,GAChBhB,EAAKsB,SAAS,CACZN,cAbNhB,EAAA,OAAAC,OAAAsB,EAAA,EAAAtB,CAAAJ,EAAAC,GAAAG,OAAAuB,EAAA,EAAAvB,CAAAJ,EAAA,EAAA4B,IAAA,SAAAC,MAAA,WAiBW,IAAAC,EAAAxB,KAELa,EACEb,KAAKY,MADPC,SAGF,OACEY,EAAAC,EAAAC,cAAA,OAAKC,UAAU,aACbH,EAAAC,EAAAC,cAAA,mBACCd,EACGY,EAAAC,EAAAC,cAACE,EAAAH,EAAD,CACEI,MAAM,yBACNC,WAAS,EACTC,QAAQ,IACRC,WAAS,EACTf,SAAU,SAAAgB,GAAC,OAAIV,EAAKV,aAAaoB,EAAEC,OAAOZ,QAC1Ca,OAAO,WAEPX,EAAAC,EAAAC,cAAA,UAAQU,QAAS,kBAAMb,EAAKR,gBAAe,KAA3C,eAlCdtB,EAAA,CAA+B4C,mHCKlBC,EAAc,CACzBC,QAAS,UACTC,UAAW,aAGb,SAASC,EAAeC,EAAOC,GAC7B,IAAMC,EAAOC,KAAKC,MAAMD,KAAKE,KAAKL,EAAQC,GAAT,QACjC,SAAAjC,OAAUkC,EAAV,SAGK,SAASI,EAATC,GAA0C,IAAzBC,EAAyBD,EAAzBC,MAAOC,EAAkBF,EAAlBE,KAAMC,EAAYH,EAAZG,SAC/BC,EAAW,IAUf,OARIF,EAAKG,aAAehB,EAAYE,WAAaY,IAC/CC,EAAWZ,EAAcU,EAAKI,WAAYH,EAASG,aAGjDL,IACFG,EAAWZ,EAAcU,EAAKI,WAAY,IAAIC,OAI9ChC,EAAAC,EAAAC,cAAC+B,EAAAhC,EAAD,KACED,EAAAC,EAAAC,cAACgC,EAAAjC,EAAD,KACG0B,EAAKQ,MAERnC,EAAAC,EAAAC,cAACgC,EAAAjC,EAAD,KACG0B,EAAKG,YAER9B,EAAAC,EAAAC,cAACgC,EAAAjC,EAAD,KACG0B,EAAKS,aAERpC,EAAAC,EAAAC,cAACgC,EAAAjC,EAAD,KACG4B,IAMF,SAASQ,EAATC,GAAgC,IAATC,EAASD,EAATC,MAC5B,OACEvC,EAAAC,EAAAC,cAAA,WACAF,EAAAC,EAAAC,cAAA,qBACAF,EAAAC,EAAAC,cAACsC,EAAAvC,EAAD,KACED,EAAAC,EAAAC,cAACuC,EAAAxC,EAAD,KACED,EAAAC,EAAAC,cAACwC,EAAAzC,EAAD,KACED,EAAAC,EAAAC,cAAC+B,EAAAhC,EAAD,KACED,EAAAC,EAAAC,cAACgC,EAAAjC,EAAD,aACAD,EAAAC,EAAAC,cAACgC,EAAAjC,EAAD,kBACAD,EAAAC,EAAAC,cAACgC,EAAAjC,EAAD,sBACAD,EAAAC,EAAAC,cAACgC,EAAAjC,EAAD,yBAGJD,EAAAC,EAAAC,cAACyC,EAAA1C,EAAD,KACGsC,EAAMK,IAAI,SAACjB,EAAMkB,GAAP,OACT7C,EAAAC,EAAAC,cAACsB,EAAD,CACE3B,IAAK8B,EAAKQ,KACVR,KAAMA,EACND,MAAiB,IAAVmB,EACPjB,SAAUW,EAAMM,EAAQ,kBC/CtC,SAASC,EAAaxD,GACpB,IAAMiD,EAAQ,GAEVQ,EAAc,KACdC,EAAoB,KAiBxB,OAfA1D,EAAK2D,MAAM,MAAMC,QAAQ,SAACC,GAV5B,IAJuBC,EAeRD,EAlBDE,MAAM,8BAmBdN,EAAcI,GAhBGC,EAiBKD,KAhBVrC,EAAYC,SAAWqC,IAAStC,EAAYE,UAiBxDgC,EAAoBG,EACGA,EAdfE,MAAM,yBAedd,EAAMe,KAAK,CACTnB,KAAMY,EACNhB,WAAY,IAAIC,KAAKe,GACrBjB,WAAYkB,EACZZ,YAAae,MAKZZ,EAGT,SAASgB,IACP,OACEvD,EAAAC,EAAAC,cAAA,WACEF,EAAAC,EAAAC,cAAA,0BACAF,EAAAC,EAAAC,cAAA,kBACQF,EAAAC,EAAAC,cAAA,KAAGsD,KAAK,+BAAR,+BADR,0HASN,SAASC,IACP,OACEzD,EAAAC,EAAAC,cAAA,WACEF,EAAAC,EAAAC,cAAA,wBACAF,EAAAC,EAAAC,cAAA,0IAwCSwD,6MA9BbvE,MAAQ,CACNoD,MAAO,MAGToB,cAAgB,SAACrE,GACflB,EAAKsB,SAAS,CACZ6C,MAAOO,EAAYxD,8EAId,IAELiD,EACEhE,KAAKY,MADPoD,MAGF,OACEvC,EAAAC,EAAAC,cAAA,OAAKC,UAAU,OACbH,EAAAC,EAAAC,cAACqD,EAAD,MACAvD,EAAAC,EAAAC,cAAC0D,EAAD,CAAWnE,SAAUlB,KAAKoF,gBAC1B3D,EAAAC,EAAAC,cAACmC,EAAD,CAAYE,MAAOA,IACnBvC,EAAAC,EAAAC,cAACuD,EAAD,MACAzD,EAAAC,EAAAC,cAAC2D,EAAA5D,EAAD,CACE6D,YAAY,OACZN,KAAK,8DAzBG3C,aChElBkD,IAASC,OAAOhE,EAAAC,EAAAC,cAAC+D,EAAD,MAASC,SAASC,eAAe","file":"static/js/main.1bc857a8.chunk.js","sourcesContent":["import React, { Component } from 'react';\nimport TextField from '@material-ui/core/TextField';\n\nexport class InputArea extends Component {\n  \n  state = {\n    expanded: true,\n  }\n\n  handleChange = (text) => {\n    this.toggleExpanded(false);\n    this.props.onChange(text);\n  }\n\n  toggleExpanded = (expanded) => {\n    this.setState({\n      expanded,\n    });\n  }\n\n  render() {\n    const {\n      expanded,\n    } = this.state;\n\n    return (\n      <div className=\"inputArea\">\n        <h2>Input</h2>\n        {expanded\n          ? <TextField\n              label=\"Paste travel data here\"\n              multiline\n              rowsMax=\"2\"\n              fullWidth\n              onChange={e => this.handleChange(e.target.value)}\n              margin=\"normal\"\n            />\n            : <button onClick={() => this.toggleExpanded(true)}>Change</button>\n          }\n      </div>\n    );\n  }\n}\n","import React from 'react';\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableHead from '@material-ui/core/TableHead';\nimport TableRow from '@material-ui/core/TableRow';\nimport Paper from '@material-ui/core/Paper';\n\nexport const TravelTypes = {\n  Arrival: 'Arrival',\n  Departure: 'Departure',\n};\n\nfunction dayDifference (date1, date2) {\n  const diff = Math.floor(Math.abs((date1 - date2) / (1000 * 60 * 60 * 24)));\n  return `${diff} days`;\n}\n\nexport function Trip ({ first, trip, nextTrip }) {\n  let duration = '-';\n  \n  if (trip.travelType === TravelTypes.Departure && nextTrip) {\n    duration = dayDifference(trip.parsedDate, nextTrip.parsedDate);\n  }\n  \n  if (first) {\n    duration = dayDifference(trip.parsedDate, new Date());\n  }\n  \n  return (\n    <TableRow>\n      <TableCell>\n        {trip.date}\n      </TableCell>\n      <TableCell>\n        {trip.travelType}\n      </TableCell>\n      <TableCell>\n        {trip.portOfEntry}\n      </TableCell>\n      <TableCell>\n        {duration}\n      </TableCell>\n    </TableRow>\n  )\n}\n\nexport function TripsTable ({ trips }) {\n  return (\n    <div>\n    <h2>Results</h2>\n    <Paper>\n      <Table>\n        <TableHead>\n          <TableRow>\n            <TableCell>Date</TableCell>\n            <TableCell>Trip type</TableCell>\n            <TableCell>Port of entry</TableCell>\n            <TableCell>Length of stay</TableCell>\n          </TableRow>\n        </TableHead>\n        <TableBody>\n          {trips.map((trip, index) => (\n            <Trip\n              key={trip.date}\n              trip={trip}\n              first={index === 0}\n              nextTrip={trips[index + 1]}\n            />\n          ))}\n        </TableBody>\n      </Table>\n    </Paper>\n    </div>\n  );\n}","import React, { Component } from 'react';\nimport GithubCorner from 'react-github-corner';\n\nimport { InputArea } from './InputArea';\nimport { TripsTable, TravelTypes } from './Trips';\n\nimport './App.css';\n\nfunction isDate (date) {\n  return date.match(/[0-9]{4}-[0-9]{2}-[0-9]{2}/);\n}\n\nfunction isTravelType (type) {\n  return type === TravelTypes.Arrival || type === TravelTypes.Departure;\n}\n\nfunction isPortOfEntry (port) {\n  return port.match(/[A-Z]{3}|Unavailable/);\n}\n\nfunction textToTrips (text) {\n  const trips = [];\n\n  let currentDate = null;\n  let currentTravelType = null;\n\n  text.split(/\\n/).forEach((line) => {\n    if (isDate(line)) {\n      currentDate = line;\n    } else if (isTravelType(line)) {\n      currentTravelType = line;\n    } else if (isPortOfEntry(line)) {\n      trips.push({\n        date: currentDate,\n        parsedDate: new Date(currentDate),\n        travelType: currentTravelType,\n        portOfEntry: line,\n      });\n    }\n  });\n\n  return trips;\n}\n\nfunction Instructions () {\n  return (\n    <div>\n      <h2>Instructions</h2>\n      <p>\n        Go to <a href=\"https://i94.cbp.dhs.gov/I94\">https://i94.cbp.dhs.gov/I94</a>,\n        go to \"View Travel History\" fill in your information and copy the table text,\n        then paste it in the text area below.\n      </p>\n    </div>\n  );\n}\n\nfunction Disclaimer () {\n  return (\n    <div>\n      <h4>Disclaimer</h4>\n      <small>\n        The information provided on this site is not guaranteed to be accurate.\n        You are encouraged to double check the data.\n      </small>\n    </div>\n  );\n}\n\nclass App extends Component {\n\n  state = {\n    trips: [],\n  }\n\n  handleProcess = (text) => {\n    this.setState({\n      trips: textToTrips(text),\n    });\n  }\n\n  render() {\n    const {\n      trips,\n    } = this.state;\n\n    return (\n      <div className=\"App\">\n        <Instructions />\n        <InputArea onChange={this.handleProcess} />\n        <TripsTable trips={trips} />\n        <Disclaimer />\n        <GithubCorner\n          bannerColor=\"#999\"\n          href=\"https://github.com/mitoyarzun/i94-date-calculator\"\n        />\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}